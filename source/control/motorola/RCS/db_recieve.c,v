head	1.1;
access;
symbols;
locks
	ejk:1.1; strict;
comment	@ * @;


1.1
date	98.05.04.11.10.44;	author ejk;	state Exp;
branches;
next	;


desc
@Functions for downloading database from PC
@


1.1
log
@Initial revision
@
text
@/* Functions for database receive (Motorola end) via serial line */
/* Edward Knowelden */

/*#include <m68kboard.h>*/
#include "../dbm_defs.h"

/* request_db  
   Called on powerup of motorola board. Asks Linux box to
   send database. */

int request_db()
{
  char data[4];
  packet p;
  data_t datatp;
  /* Init link to SERIAL_TRANSPORT - (not supported yet)*/
  /* register_handler(DATABASE,handle_db_data); */

  /* send request message */
  itos(REQUEST_DBDL,data,4);
  datatp = DATABASE;
  p.datatype = datatp;
  p.length = 4;
  p.data = data;

  mtr_senddata(p);
}

/* Called by SERIAL_TRANSPORT when it has some data for the database */
void handle_db_data(packet p)
{
  int i,j,rsize;

  /* calculate record size (+2 for 2 NULL chars)*/
  rsize = UID_SIZE+PIN_SIZE+2;

  printf("\nExtracting packet...(%i records)\n",(p.length/sizeof(db_item)));
  /* extract data from packet into memory */
  for(i=0; i < (p.length/sizeof(db_item)); i++){
    /* first 12 bytes are uid */
    for(j=0;j<UID_SIZE+1;j++){
      db_local_store[i].uid[j] = *(p.data+(rsize*i)+j);
    }
    printf("uid: %s\n",db_local_store[i].uid);

    /* next 4 are PIN */
    for(j=0;j<PIN_SIZE+1;j++){
      db_local_store[i].pin[j] = *(p.data+(rsize*i)+UID_SIZE+1+j);
    }
    printf("pin: %s\n",db_local_store[i].pin);
  }
}


@
